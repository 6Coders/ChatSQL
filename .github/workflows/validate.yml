name: Python WebApp

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run Python tests and generate coverage report
      run: |
        coverage run -m unittest
        coverage xml -o tests/results/coverage.xml
    - name: Installazione Node.js and NPM
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Installazione Vue CLI
      run: |
        npm install -g @vue/cli
    - name: Installazione Dipendenze Bootstrap
      run: |
        npm install jquery popper.js
    - name: Installazione Vue.js dependencies
      run: |
        cd frontend
        npm install
        cd ..
    - name: Linting Codice Python (Flake8)
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test Python
      run: |
        cd backend
        pytest
    - name: Build Unit Test
      run: |
        cd frontend
        npm run test:unit
        cd ..
    - name: Run Vue.js tests and generate coverage report
      run: |
        cd frontend
        npx jest --coverage
        cd ..
    - name: Build FrontEnd
      run: |
        cd frontend
        npm run build
        cd ..
    - name: Linting Codice Vue.js
      run: |
        cd frontend
        npm run lint
        cd ..
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: |
          backend/coverage.xml
          frontend/coverage/lcov.info # Aggiungi il percorso del report di copertura del frontend
        flags: python,frontend # Flags opzionali, utili per separare i report di copertura
        name: backend-coverage,frontend-coverage # Nomi opzionali, utili per separare i report di copertura

    # Genera il badge di build
    - name: Generate build badge
      run: echo "<svg xmlns='http://www.w3.org/2000/svg' width='96' height='20'><linearGradient id='b' x2='0' y2='100%'><stop offset='0' stop-color='#bbb' stop-opacity='.1' /><stop offset='1' stop-opacity='.1' /></linearGradient><mask id='a'><rect width='96' height='20' rx='3' fill='#fff' /></mask><g mask='url(#a)'><path fill='#555' d='M0 0h61v20H0z' /><path fill='#4c1' d='M61 0h35v20H61z' /><path fill='url(#b)' d='M0 0h96v20H0z' /></g><g fill='#fff' text-anchor='middle' font-family='DejaVu Sans,Verdana,Geneva,sans-serif' font-size='110'><text x='315' y='150' fill='#010101' fill-opacity='.3' transform='scale(.1)' textLength='510'>build</text><text x='315' y='140' transform='scale(.1)' textLength='510'>build</text><text x='785' y='150' fill='#010101' fill-opacity='.3' transform='scale(.1)' textLength='330'>passing</text><text x='785' y='140' transform='scale(.1)' textLength='330'>passing</text></g></svg>" > badge.svg


